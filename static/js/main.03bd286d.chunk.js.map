{"version":3,"sources":["components/Navbar.js","components/TextForms.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","Fragment","className","mode","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","Link","to","aria-current","aboutTextUtils","role","placeholder","onClick","toggleMode","htmlFor","TextForms","text","setText","useState","style","color","heading","value","onChange","event","console","log","target","rows","backgroundColor","disabled","trim","handleOnClick","showAlert","newText","toUpperCase","handlelcClick","toLowerCase","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handExtraSpace","split","join","led","handClearText","filter","word","length","About","data-bs-parent","defaultProps","Alert","height","alert","class","msg","App","setMode","setAlert","message","setTimeout","body","router","createBrowserRouter","path","element","RouterProvider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.03bd286d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <span className=\"navbar-brand\" >{props.title}</span> \r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.aboutTextUtils}</Link>\r\n              </li>\r\n              \r\n  \r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\" : \"light\"}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Dark Mode enable</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutTextUtils: PropTypes.string,\r\n}\r\nNavbar.defaultProps = {\r\n  title: \"set title\",\r\n  aboutTextUtils: \"about\"\r\n}\r\n\r\n\r\n// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// export default function Navbar(props) {\r\n//   return (\r\n//     <nav\r\n//       className={`navbar navbar-expand-lg navbar-${props.mode}  bg-${props.mode}`}\r\n//     >\r\n//       <div className=\"container-fluid\">\r\n//         <Link className=\"navbar-brand\" to=\"/\">\r\n//           {props.title}\r\n//         </Link>\r\n//         <button\r\n//           className=\"navbar-toggler\"\r\n//           type=\"button\"\r\n//           data-bs-toggle=\"collapse\"\r\n//           data-bs-target=\"#navbarSupportedContent\"\r\n//           aria-controls=\"navbarSupportedContent\"\r\n//           aria-expanded=\"false\"\r\n//           aria-label=\"Toggle navigation\"\r\n//         >\r\n//           <span className=\"navbar-toggler-icon\"></span>\r\n//         </button>\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n//           <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n//             <li className=\"nav-item\">\r\n//               <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n//                 Home\r\n//               </Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//               <Link className=\"nav-link active\" to=\"/about\">\r\n//                 {props.aboutText}\r\n//               </Link>\r\n//             </li>\r\n//           </ul>\r\n\r\n//           {/* Enable Dark Mode */}\r\n//           <div\r\n//             className={`form-check form-switch text-${\r\n//               props.mode === \"light\" ? \"dark\" : \"light\"\r\n//             } mx-2`}\r\n//           >\r\n//             <input\r\n//               className=\"form-check-input\"\r\n//               onClick={props.toggleMode}\r\n//               type=\"checkbox\"\r\n//               role=\"switch\"\r\n//               id=\"flexSwitchCheckDefault\"\r\n//             />\r\n//             <label\r\n//               className=\"form-check-label\"\r\n//               htmlFor=\"flexSwitchCheckDefault\"\r\n//             >\r\n//               DarkMode\r\n//             </label>\r\n//           </div>\r\n\r\n//           {/* Search Button */}\r\n//           <form className=\"d-flex\" role=\"search\">\r\n//             <input\r\n//               className=\"form-control me-2\"\r\n//               type=\"search\"\r\n//               placeholder=\"Search\"\r\n//               aria-label=\"Search\"\r\n//             />\r\n//             <button className=\"btn btn-primary\" type=\"submit\">\r\n//               Search\r\n//             </button>\r\n//           </form>\r\n//         </div>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// Navbar.propTypes = { title: PropTypes.string, aboutText: PropTypes.string };","import React, {useState } from 'react'\r\n\r\nexport default function TextForms(props) {\r\n\r\n    const [text, setText] = useState(\"\");\r\n    const handleOnClick = () => {\r\n        props.showAlert(\"Successfully! converted into upper case\", \"success\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handlelcClick = () => {\r\n        let newText = text.toLowerCase();\r\n        props.showAlert(\"Successfully! converted into lower case\", \"success\");\r\n        setText(newText);\r\n    }\r\n    // important to set the text while typing in textarea\r\n    const handleOnChange = (event) => {\r\n        console.log(\"on Change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = () => {\r\n        let newText = document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\")\r\n    }\r\n    const handExtraSpace = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n    }\r\n    const handClearText = () => {\r\n        props.showAlert(\"Successfully! clear the text\", \"danger\");\r\n        setText('');\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? \"white\" : \"black\" }}>\r\n                <div className=\"mb-3\">\r\n                    <h1>{props.heading}</h1>\r\n                    {/* onchange is important below in order to make changes or setting the state (text) in textarea as it is setting the entered text with the help of setText(event.target.value) */}\r\n                    <textarea className=\"form-control text\" id=\"myBox\" value={text} onChange={handleOnChange} rows=\"8\" style={{ backgroundColor: props.mode === 'dark' ? '#333a45' : 'white', color: props.mode === 'light' ? \"black\" : \"white\" }}></textarea>\r\n                </div>\r\n                <button type=\"submit\" disabled={text.trim()===\"\"} onClick={handleOnClick} className=\"btn btn-primary mx-1 my-1 but\">Uppercase converter</button>\r\n                <button type=\"submit\" disabled={text.trim()===\"\"} onClick={handlelcClick} className=\"btn btn-primary mx-1 my-1 but\">Lowercase converter</button>\r\n                <button type=\"submit\" disabled={text.trim()===\"\"} onClick={handleCopy} className=\"btn btn-primary mx-1 my-1 but\">Copy Text</button>\r\n                <button type=\"submit\" disabled={text.trim()===\"\"} onClick={handExtraSpace} className=\"btn btn-primary mx-1 my-1 but\">Remove extra space</button>\r\n                <button type=\"submit\" disabled={text.trim()===\"\"}led onClick={handClearText} className=\"btn btn-primary mx-1 my-1 but\">Remove Text</button>\r\n            </div>\r\n\r\n            <div className=\"container\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#042743', color: props.mode === 'light' ? \"black\" : \"white\" }}>\r\n                <h3 className='mt-4 '>\r\n                    Your text includes the following numbere of words and characters(excluding space)\r\n                </h3>\r\n\r\n                {/* inside split regex is written which is used for checking space and next line words if any word has written */}\r\n\r\n                <p className='my-2'>\r\n                    {text.split(/\\s+/).filter(word => word.trim() !== \"\").length} word and {text.length} characters\r\n\r\n                </p>\r\n                <p>\r\n                    <b className='my-2'>Avg time to read</b> <br />\r\n                    { text === '' ? 0 : 0.008 * text.split(/\\s/).length} minutes to read\r\n                </p>\r\n                <h3>\r\n                    Preview\r\n                </h3>\r\n                <p className=\"text-justify my-2\">\r\n                    {text === '' ? \"Nothing to preview\" : text}\r\n                </p>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n\r\n    return (\r\n            <div className='container' style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}>\r\n                <div className=\"accordion\" id=\"accordionExample\">\r\n                    <div className=\"accordion-item\" >\r\n                        <h2 className=\"accordion-header\">\r\n                            <button className=\"accordion-button\" type=\"button\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\", backgroundColor: props.mode === \"light\" ? \"white\" : \"#333a45\" }} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                                <strong>TextUtils - Simplify Your Text Editing</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>TextUtils</strong> is a versatile web application designed to make text manipulation quick and easy. It provides essential tools to streamline your workflow, allowing you to transform text effortlessly. With TextUtils, you can convert all selected text to uppercase or lowercase with a single click, making it easier to adjust text formatting on the go. If you need to start fresh, the \"Remove Text\" feature clears all input text instantly, while the \"Copy Text\" tool allows you to save your modified text to the clipboard for quick access. Additionally, the \"Remove Extra Spaces\" feature cleans up unnecessary spaces, helping to maintain a polished and organized text structure. More features will be added soon to enhance the text editing experience even further!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\" >\r\n                        <h2 className=\"accordion-header\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\", backgroundColor: props.mode === \"light\" ? \"white\" : \"#333a45\" }} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                                <strong>Free to Us</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\"  data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>TextUtils</strong> is completely free, allowing anyone to access powerful text manipulation tools without any cost. Whether you’re a student, writer, developer, or simply someone who needs to modify text frequently, TextUtils provides a user-friendly and efficient platform. With no hidden fees or sign-ups required, you can quickly edit and transform your text as needed. Simply open the app, utilize the tools, and enjoy an enhanced text editing experience anytime, anywhere!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\">\r\n                            <button className=\"accordion-button collapsed\" type=\"button\" style={{ color: props.mode === \"light\" ? \"black\" : \"white\", backgroundColor: props.mode === \"light\" ? \"white\" : \"#333a45\" }} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                                <strong>Browser Compatible</strong>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n                            <div className=\"accordion-body\">\r\n                                <strong>TextUtils</strong> is fully browser-compatible, ensuring a seamless experience across all major web browsers, including Chrome, Firefox, Safari, and Edge. No downloads or installations are needed—simply open TextUtils in your preferred browser and start editing your text immediately. Whether you’re on a desktop, tablet, or mobile device, TextUtils adapts to provide a smooth, responsive interface, making text manipulation easy and accessible wherever you are.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        <div style={{height : '60px'}}>\r\n            {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}</strong>\r\n            </div>}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForms from './components/TextForms';\nimport About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport { RouterProvider, createBrowserRouter } from 'react-router-dom';\n\n// BrowserRouter, Routes, Route, import for other commented method\n// This whole project is done with the help of function based components \n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      showAlert(null);\n    }, 3000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\"; /* setting whole background color */\n      showAlert(\"Successfully: Dark Mode Enabled!!\", \"success\");\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Successfully: Light Mode Enabled!!\", \"warning\");\n    }\n  }\n  const router = createBrowserRouter([\n    {\n      path: \"/about\",\n      element: <><Navbar title='TextUtils' aboutTextUtils='About Us' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} /><About mode={mode} /></>\n    },\n    {\n      path: \"/\",\n      element: <><Navbar title='TextUtils' aboutTextUtils='About Us' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} /><TextForms showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode} /></>\n    }\n  ]);\n  return (\n    <>\n      {/* <BrowserRouter>\n        <Navbar title='TextUtils' aboutTextUtils='About Us' mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\" mode={mode}>\n          <Routes>\n          // use {exact} keyword is important react perform particial matching so it can cause issues \n            <Route exact path=\"/about\" element={<About mode={mode} />}/>\n          </Routes>\n          <Routes>\n            <Route path=\"/\" element={<TextForms showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>}/>\n          </Routes>\n        </div>\n      </BrowserRouter> */}\n      <RouterProvider router={router} />\n    </>\n\n  );\n}\n// #0c0e0d5c\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}